def stage_3_target_constraint1():
    """constraints: <"target constraints", "the center of the gripper of the robot", "the center of the H key of the keyboard", "the center of the gripper of the robot reaches the center of the H key of the keyboard">"""
    mask1 = segment("the center of the gripper of the robot", -1)
    mask2 = segment("the center of the H key of the keyboard", -1)
    
    # Convert masks to point clouds
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the mean position of the gripper and the H key
    gripper_center = np.mean(pc1, axis=0)
    h_key_center = np.mean(pc2, axis=0)
    
    # Calculate the distance between the gripper and the H key
    distance = np.linalg.norm(gripper_center - h_key_center)
    
    # The cost is the distance between the gripper and the H key
    cost = distance
    
    return cost

