def stage_3_path_constraint1():
    mask1 = segment("the point of the pen tip of the pen")
    mask2 = segment("the plane of cup opening of the black cup")
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Calculate the average position of the point cloud points
    pen_tip_position = np.mean(pc1, axis=0)
    cup_opening_plane_position = np.mean(pc2, axis=0)

    # Calculate the vertical alignment (assuming z-axis is vertical)
    vertical_distance = np.abs(pen_tip_position[2] - cup_opening_plane_position[2])
    horizontal_distance = np.linalg.norm(pen_tip_position[:2] - cup_opening_plane_position[:2]) # only x and y

    # The cost is based on how close the horizontal distance is to 0 (perfectly vertical)
    cost = horizontal_distance
    
    return cost

