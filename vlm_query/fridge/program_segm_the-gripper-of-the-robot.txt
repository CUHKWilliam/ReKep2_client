## mask_indice: 38
def segment_object(mask):
    ## find out top of image as mask_output, mask_output should still be in the shape(H, W)
    H, W = mask.shape[0], mask.shape[1]
    
    # Initialize mask_output as false everywhere
    mask_output = np.zeros_like(mask, dtype=bool)
    
    # Iterate through columns to find the topmost true value of each column, representing the top of the object
    for j in range(W):
        true_indices = np.where(mask[:, j])[0]  # Find row indices where the value is True in the current column
        if true_indices.size > 0:
            topmost_index = true_indices[0]  # Get the topmost True index in this column
            mask_output[topmost_index, j] = True  # Mark the top edge in mask_output
    
    return mask_output
