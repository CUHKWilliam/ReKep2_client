def stage_2_subgoal_constraint1():
    """constraints: <"sub-goal constraints", "the center of the handle of the red faucet", "the center of the body of the red faucet", "the center of the handle of the red faucet remains within 10 cm of the center of the body of the red faucet">"""
    # Segment the center of the handle and the center of the body of the red faucet
    mask1 = segment("the center of the handle of the red faucet", -1)  # Current position
    mask2 = segment("the center of the body of the red faucet", -1)  # Center of the faucet body

    # Convert masks to point clouds if necessary
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Step 1: Compute the distance between the handle's center and the faucet's body center
    handle_center = np.mean(pc1, axis=0)
    faucet_center = np.mean(pc2, axis=0)
    distance = np.linalg.norm(handle_center - faucet_center)

    # Step 2: The cost is the deviation from 10 cm
    cost = abs(distance - 0.10)
    
    return cost

