def stage_2_target_constraint1():
    """constraints: <"target constraints", "the center of the gripper of the robot", "the center of the body of the button", "the center of the gripper of the robot moves toward the center of the body of the button by 50 cm">"""
    mask1 = segment("the center of the gripper of the robot", -1)
    mask1_initial = segment("the center of the gripper of the robot", -2)
    mask2 = segment("the center of the body of the button", -1)
    
    if mask1.shape[-1] == 3:
        pc1_initial = mask1_initial
        pc1 = mask1
        pc2 = mask2
    else:
        pc1_initial = mask_to_pc(mask1_initial)
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the direction vector from the initial gripper position to the button
    direction_vec = np.mean(pc2, axis=0) - np.mean(pc1_initial, axis=0)
    direction_vec = direction_vec / np.linalg.norm(direction_vec)

    # Compute the target position by moving 50 cm along the direction vector
    target_position = np.mean(pc2, axis=0) + direction_vec * 0.50

    # Compute the current gripper position
    current_gripper_position = np.mean(pc1, axis=0)

    # The cost is the distance between the current gripper position and the target position
    cost = np.linalg.norm(current_gripper_position - target_position)
    
    return cost

