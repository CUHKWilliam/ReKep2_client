def stage_3_subgoal_constraint1():
    """constraints: <"sub-goal constraints", "the center of the body of the blue cube", "the center of the middle stack of the shelf", "the center of the body of the blue cube is directly above the center of the middle stack of the shelf by around 5 centimeters">"""
    mask1 = segment("the center of the body of the blue cube", -1)
    mask2 = segment("the center of the middle stack of the shelf", -1)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)
    
    # Compute the mean position of the blue cube and the middle stack of the shelf
    center_cube = np.mean(pc1, axis=0)
    center_shelf = np.mean(pc2, axis=0)
    
    # Calculate the horizontal distance (x, y coordinates) between the centers
    horizontal_distance = np.linalg.norm(center_cube[:2] - center_shelf[:2])
    
    # Calculate the vertical distance (z-axis) between the blue cube and the shelf
    vertical_distance = center_cube[2] - center_shelf[2]
    
    # The target vertical distance is 5 cm
    cost = abs(vertical_distance - 0.05) + horizontal_distance
    
    return cost

