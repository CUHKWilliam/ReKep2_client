def stage_3_target_constraint1():
    """constraints: <"target constraints", "the center of the gripper of the robot", "the center of the body of the red button", "the center of the gripper of the robot moves toward the center of the body of the red button by at least 50 cm">"""
    mask1 = segment("the center of the gripper of the robot", -1)
    mask1_initial = segment("the center of the gripper of the robot", -2)
    mask2 = segment("the center of the body of the red button", -1)
    
    if mask1.shape[-1] == 3:
        pc1_initial = mask1_initial
        pc1 = mask1
        pc2 = mask2
    else:
        pc1_initial = mask_to_pc(mask1_initial)
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the direction vector from the initial gripper position to the button
    direction_vector = np.mean(pc2, axis=0) - np.mean(pc1_initial, axis=0)
    direction_vector = direction_vector / np.linalg.norm(direction_vector)

    # Calculate the target position (move toward the button by 50 cm)
    target_position = np.mean(pc2, axis=0) + direction_vector * 0.50

    # Compute the cost as the distance between the current gripper position and the target position
    cost = np.linalg.norm(np.mean(pc1, axis=0) - target_position)
    
    return cost

