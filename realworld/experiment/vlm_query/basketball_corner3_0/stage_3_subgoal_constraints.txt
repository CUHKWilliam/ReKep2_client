def stage_3_subgoal_constraint1():
    """constraints: <"sub-goal constraints", "the center of the body of the basketball", "the center of the hoop of the basketball hoop", "the center of the body of the basketball is directly above the center of the hoop of the basketball hoop by around 20 centimeters">"""
    mask1 = segment("the center of the body of the basketball", -1)
    mask2 = segment("the center of the hoop of the basketball hoop", -1)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the mean position of the basketball and the hoop
    basketball_center = np.mean(pc1, axis=0)
    hoop_center = np.mean(pc2, axis=0)
    
    # Calculate the horizontal distance (x, y coordinates) between the centers
    horizontal_distance = np.linalg.norm(basketball_center[:2] - hoop_center[:2])
    
    # Calculate the vertical distance (z-axis) between the basketball and the hoop
    vertical_distance = basketball_center[2] - hoop_center[2] - 0.2  # 20 cm above the hoop
    
    # The cost is based on the deviation from the ideal position
    cost = abs(vertical_distance) + horizontal_distance
    
    return cost

