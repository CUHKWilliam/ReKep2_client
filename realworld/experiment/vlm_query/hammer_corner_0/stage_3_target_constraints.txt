def stage_3_target_constraint1():
    """constraints: <"target constraints", "the center of the head of the hammer", "the center of the body of the black nail", "the center of the head of the hammer moves toward the center of the body of the black nail by 5 centimeters">"""
    mask1 = segment("the center of the head of the hammer", -1)
    mask2 = segment("the center of the body of the black nail", -1)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Calculate the center of the head of the hammer
    hammer_head_center = np.mean(pc1, axis=0)
    
    # Calculate the center of the body of the black nail
    nail_center = np.mean(pc2, axis=0)

    # Calculate the target point 5 cm along the axis of the black nail
    direction_vector = nail_center - hammer_head_center
    direction_vector = direction_vector / np.linalg.norm(direction_vector)
    target_point = hammer_head_center + direction_vector * 0.05

    # Calculate the cost as the L2 distance between the hammer head center and the target point
    cost = np.linalg.norm(hammer_head_center - target_point)
    
    return cost

