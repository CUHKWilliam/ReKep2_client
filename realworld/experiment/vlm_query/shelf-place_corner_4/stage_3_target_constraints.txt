def stage_3_target_constraint1():
    """constraints: <"target constraints", "the center of the head of the hammer", "the center of the top of the nail", "the center of the head of the hammer reaches the center of the top of the nail">"""
    mask1 = segment("the center of the head of the hammer", -1)
    mask2 = segment("the center of the top of the nail", -1)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the mean position of the hammer head and the nail top
    hammer_head_center = np.mean(pc1, axis=0)
    nail_top_center = np.mean(pc2, axis=0)
    
    # Calculate the distance between the hammer head and the nail top
    distance = np.linalg.norm(hammer_head_center - nail_top_center)
    
    cost = distance
    return cost

