def stage_3_subgoal_constraint1():
    """constraints: <"sub-goal constraints", "the center of the body of the pen", "the plane of the opening of the black cup", "inside"> """
    mask1 = segment("the center of the body of the pen")
    mask2 = segment("the plane of the opening of the black cup")
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the center of mass (mean position) for the pen's body and the cup's opening plane
    pen_body_center = np.mean(pc1, axis=0)
    cup_plane_mean = np.mean(pc2, axis=0)

    # This essentially ensures that the pen body is inside the cup opening plane
    # Calculate distance between pen's body center and the cup's opening plane
    vertical_distance = abs(pen_body_center[2] - cup_plane_mean[2])

    # If the pen's body is above the plane, penalize significantly
    if vertical_distance > 0:
        cost = vertical_distance
    else:
        cost = 0
    return 0
    return cost