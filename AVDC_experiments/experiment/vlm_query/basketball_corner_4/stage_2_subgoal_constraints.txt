def stage_2_subgoal_constraint1():
    """constraints: <"sub-goal constraints", "the center of the body of the basketball", "the center of the body of the basketball at its initial timestamp", "the center of the body of the basketball is directly above the center of the body of the basketball at its initial timestamp by more than 20 centimeters">"""
    mask1 = segment("the center of the body of the basketball", -1)
    mask2 = segment("the center of the body of the basketball", 0)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the mean position of the basketball at the latest and initial timestamps
    basketball_center_latest = np.mean(pc1, axis=0)
    basketball_center_initial = np.mean(pc2, axis=0)
    
    # Calculate the vertical distance (z-axis) between the centers
    vertical_distance = basketball_center_latest[2] - basketball_center_initial[2]
    
    # The cost is based on how far the basketball is lifted vertically (more than 20 cm)
    cost = max(0, 0.2 - vertical_distance)
    
    return cost

