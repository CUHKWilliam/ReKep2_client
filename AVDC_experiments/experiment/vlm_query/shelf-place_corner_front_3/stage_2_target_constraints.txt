def stage_2_target_constraint1():
    """constraints: <"targets constraints", "the center of the body of the red box", "the center of the body of the red box at its initial timestamp", "the center of the body of the red box is above the center of the body of the red box at its initial timestamp by around 20 centimeters">"""
    mask1 = segment("the center of the body of the blue cube", -1)
    mask2 = segment("the center of the body of the blue cube", 0)
    import ipdb;ipdb.set_trace()
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)
    
    # Compute the mean position of the red box at the latest and initial timestamps
    red_box_center_latest = np.mean(pc1, axis=0)
    red_box_center_initial = np.mean(pc2, axis=0)
    
    # Calculate the vertical distance (z-axis) between the centers
    vertical_distance = red_box_center_latest[2] - red_box_center_initial[2]
    
    # The target is to lift the red box by 20 cm
    cost = abs(vertical_distance - 0.20)
    
    return cost

