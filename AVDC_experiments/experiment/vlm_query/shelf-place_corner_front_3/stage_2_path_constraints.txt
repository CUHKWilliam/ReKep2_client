def stage_2_path_constraint1():
    """constraints: <"path constraints", "the center of the body of the red box", "the plane of the surface of the table", "the center of the body of the red box moves vertically above the plane of the surface of the table">"""
    mask1 = segment("the center of the body of the red box", -1)
    mask2 = segment("the plane of the surface of the table", -1)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)
    
    # Compute the mean position of the red box and the table surface
    red_box_center = np.mean(pc1, axis=0)
    table_surface = np.mean(pc2, axis=0)
    
    # Calculate the horizontal distance (x, y coordinates) between the red box and the table surface
    horizontal_distance = np.linalg.norm(red_box_center[:2] - table_surface[:2])
    
    # Ensure the red box moves vertically (no significant horizontal movement)
    cost = horizontal_distance
    
    return cost * 0

