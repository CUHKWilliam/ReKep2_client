def stage_3_path_constraint1():
    """constraints: <"path constraints", "the center of the body of the basketball", "the plane of the surface of the table", "the center of the body of the basketball moves horizontally parallel to the plane of the surface of the table">"""
    mask1 = segment("the center of the body of the basketball", -1)
    mask2 = segment("the plane of the surface of the table", -1)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the mean position of the basketball and the table surface
    basketball_center = np.mean(pc1, axis=0)
    table_surface = np.mean(pc2, axis=0)
    
    # Calculate the vertical distance (z-axis) between the basketball and the table surface
    vertical_distance = basketball_center[2] - table_surface[2]
    
    # The cost is based on how far the basketball is from moving horizontally parallel to the table
    cost = max(0, -vertical_distance)
    
    return cost

