def stage_2_subgoal_constraint1():
    """constraints: <"sub-goal constraints", "the center of the body of the basketball", "the plane of the surface of the table", "the center of the body of the basketball is above the plane of the surface of the table by around 20 centimeters">"""
    mask1 = segment("the center of the body of the basketball", -1)
    mask2 = segment("the plane of the surface of the table", -1)
    
    if mask1.shape[-1] == 3:
        pc1 = mask1
        pc2 = mask2
    else:
        pc1 = mask_to_pc(mask1)
        pc2 = mask_to_pc(mask2)

    # Compute the mean position of the basketball and the table
    basketball_center = np.mean(pc1, axis=0)
    table_plane = np.mean(pc2, axis=0)
    
    # Calculate the vertical distance between the basketball and the table
    vertical_distance = basketball_center[2] - table_plane[2]
    
    # The target vertical distance is 20 cm
    cost = abs(vertical_distance - 0.20)
    print("stage 2 cost:", cost)

    # import open3d as o3d
    # pcd = o3d.geometry.PointCloud()
    # pcd.points = o3d.utility.Vector3dVector(maks2)
    # o3d.io.write_point_cloud('debug.ply', pcd)
    # import ipdb;ipdb.set_trace()

    return cost

